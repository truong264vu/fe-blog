{"remainingRequest":"/home/ong-tru/Documents/MyBlog/fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ong-tru/Documents/MyBlog/fe/src/components/acccc.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ong-tru/Documents/MyBlog/fe/src/components/acccc.vue","mtime":1634054974704},{"path":"/home/ong-tru/Documents/MyBlog/fe/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ong-tru/Documents/MyBlog/fe/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ong-tru/Documents/MyBlog/fe/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ong-tru/Documents/MyBlog/fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZS9hcHAnOwppbXBvcnQgJ2ZpcmViYXNlL3N0b3JhZ2UnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnYWNjY2MnLAogIGRhdGEoKXsJICAKCXJldHVybnsKICAgICAgaW1hZ2VEYXRhOiBudWxsLCAgCiAgICAgIHBpY3R1cmU6IG51bGwsCiAgICAgIHVwbG9hZFZhbHVlOiAwCgl9CiAgfSwKICBtZXRob2RzOnsKICAgIHByZXZpZXdJbWFnZShldmVudCkgewogICAgICB0aGlzLnVwbG9hZFZhbHVlPTA7CiAgICAgIHRoaXMucGljdHVyZT1udWxsOwogICAgICB0aGlzLmltYWdlRGF0YSA9IGV2ZW50LnRhcmdldC5maWxlc1swXTsKICAgIH0sCiAgICBvblVwbG9hZCgpewogICAgICB0aGlzLnBpY3R1cmU9bnVsbDsKICAgICAgY29uc3Qgc3RvcmFnZVJlZj1maXJlYmFzZS5zdG9yYWdlKCkucmVmKGAke3RoaXMuaW1hZ2VEYXRhLm5hbWV9YCkucHV0KHRoaXMuaW1hZ2VEYXRhKTsKICAgICAgc3RvcmFnZVJlZi5vbihgc3RhdGVfY2hhbmdlZGAsc25hcHNob3Q9PnsKICAgICAgICB0aGlzLnVwbG9hZFZhbHVlID0gKHNuYXBzaG90LmJ5dGVzVHJhbnNmZXJyZWQvc25hcHNob3QudG90YWxCeXRlcykqMTAwOwogICAgICB9LCBlcnJvcj0+e2NvbnNvbGUubG9nKGVycm9yLm1lc3NhZ2UpfSwKICAgICAgKCk9Pnt0aGlzLnVwbG9hZFZhbHVlPTEwMDsKICAgICAgICBzdG9yYWdlUmVmLnNuYXBzaG90LnJlZi5nZXREb3dubG9hZFVSTCgpLnRoZW4oKHVybCk9PnsKICAgICAgICAgIHRoaXMucGljdHVyZSA9dXJsOwogICAgICAgIH0pOwogICAgICB9ICAgICAgCiAgICAgICk7CiAgICB9CiAgCiAgfQp9Cg=="},{"version":3,"sources":["acccc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"acccc.vue","sourceRoot":"src/components","sourcesContent":["\n  \n<template>\n  <div>\n    <div >\n      <p>Upload an image to Firebase:</p>\n      <input type=\"file\" @change=\"previewImage\" accept=\"image/*\" >                \n    </div>\n    <div>\n      <p>Progress: {{uploadValue.toFixed()+\"%\"}}\n      <progress id=\"progress\" :value=\"uploadValue\" max=\"100\" ></progress>  </p>\n    </div>\n    <div v-if=\"imageData!=null\">                     \n        <img class=\"preview\" :src=\"picture\">\n        <br>\n      <button @click=\"onUpload\">Upload</button> {{picture}}\n    </div>   \n  </div>\n</template>\n\n<script>\nimport firebase from 'firebase/app';\nimport 'firebase/storage'\nexport default {\n  name: 'acccc',\n  data(){\t  \n\treturn{\n      imageData: null,  \n      picture: null,\n      uploadValue: 0\n\t}\n  },\n  methods:{\n    previewImage(event) {\n      this.uploadValue=0;\n      this.picture=null;\n      this.imageData = event.target.files[0];\n    },\n    onUpload(){\n      this.picture=null;\n      const storageRef=firebase.storage().ref(`${this.imageData.name}`).put(this.imageData);\n      storageRef.on(`state_changed`,snapshot=>{\n        this.uploadValue = (snapshot.bytesTransferred/snapshot.totalBytes)*100;\n      }, error=>{console.log(error.message)},\n      ()=>{this.uploadValue=100;\n        storageRef.snapshot.ref.getDownloadURL().then((url)=>{\n          this.picture =url;\n        });\n      }      \n      );\n    }\n  \n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nimg.preview {\n    width: 200px;\n}\n</style>\n"]}]}