{"remainingRequest":"/home/ong-tru/Documents/MyBlog/fe/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/ong-tru/Documents/MyBlog/fe/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ong-tru/Documents/MyBlog/fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ong-tru/Documents/MyBlog/fe/src/components/AdminPage.vue?vue&type=template&id=8d7db904&scoped=true&","dependencies":[{"path":"/home/ong-tru/Documents/MyBlog/fe/src/components/AdminPage.vue","mtime":1633102093923},{"path":"/home/ong-tru/Documents/MyBlog/fe/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ong-tru/Documents/MyBlog/fe/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/ong-tru/Documents/MyBlog/fe/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ong-tru/Documents/MyBlog/fe/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IGF0dHJzOiB7IGlkOiAiYWRtaW4iIH0gfSwgWwogICAgX2MoImxpbmsiLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgcmVsOiAic3R5bGVzaGVldCIsCiAgICAgICAgaHJlZjoKICAgICAgICAgICJodHRwczovL3N0YWNrcGF0aC5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC80LjMuMS9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiLAogICAgICAgIGludGVncml0eToKICAgICAgICAgICJzaGEzODQtZ2dPeVIwaVhDYk1RdjNYaXBtYTM0TUQrZEgvMWZRNzg0L2o2Y1kvaUpUUVVPaGNXcjd4OUp2b1J4VDJNWncxVCIsCiAgICAgICAgY3Jvc3NvcmlnaW46ICJhbm9ueW1vdXMiCiAgICAgIH0KICAgIH0pLAogICAgX2MoImRpdiIsIHsgYXR0cnM6IHsgaWQ6ICJuYXZiYXIiIH0gfSwgWwogICAgICBfdm0uX20oMCksCiAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgYXR0cnM6IHsgdHlwZTogInN1Ym1pdCIsIHZhbHVlOiAidGhlbSBiYWkgdmlldCIgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICA7KF92bS50YWJsZSA9IHRydWUpLCAoX3ZtLnRhYmxlX2NyZWF0ZSA9ICFfdm0udGFibGVfZWRpdCkKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIF0pCiAgICBdKSwKICAgIF9jKCJ0YWJsZSIsIHsgc3RhdGljQ2xhc3M6ICJ0YWJsZSB0YWJsZS1zdHJpcGVkICIgfSwgWwogICAgICBfdm0uX20oMSksCiAgICAgIF9jKAogICAgICAgICJ0Ym9keSIsCiAgICAgICAgX3ZtLl9sKF92bS5kYXRhcywgZnVuY3Rpb24oZGF0YSkgewogICAgICAgICAgcmV0dXJuIF9jKCJ0ciIsIHsga2V5OiBkYXRhLmlkIH0sIFsKICAgICAgICAgICAgX2MoInRoIiwgW19jKCJvbCIsIFtfYygibGkiLCBbX3ZtLl92KF92bS5fcygxKSldKV0pXSksCiAgICAgICAgICAgIF9jKCJ0aCIsIHsgYXR0cnM6IHsgc2NvcGU6ICJyb3ciIH0gfSwgWwogICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoZGF0YS5pZCkgKyAiICIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygidGgiLCBbX3ZtLl92KCIgIiArIF92bS5fcyhkYXRhLnRpdGxlKSArICIgIildKSwKICAgICAgICAgICAgX2MoInRoIiwgW192bS5fdigiICIgKyBfdm0uX3MoZGF0YS5zeW5vcHNpcykgKyAiICIpXSksCiAgICAgICAgICAgIF9jKCJ0aCIsIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJwIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJjb250ZW50IiB9LAogICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyBpbm5lckhUTUw6IF92bS5fcyhkYXRhLmNvbnRlbnQpIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCIgIiArIF92bS5fcyhkYXRhLmNvbnRlbnQpICsgIiAiKV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAidGgiLAogICAgICAgICAgICAgIF92bS5fbChkYXRhLmNhdGVnb3JpZXMsIGZ1bmN0aW9uKGNhdGVnb3J5KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX2MoImRpdiIsIHsga2V5OiBjYXRlZ29yeS5pZCB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoY2F0ZWdvcnkubmFtZSkgKyAiICIpCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIDAKICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgInRoIiwKICAgICAgICAgICAgICBfdm0uX2woZGF0YS50YWdzLCBmdW5jdGlvbih0YWcpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfYygiZGl2IiwgeyBrZXk6IHRhZy5pZCwgYXR0cnM6IHsgc2NvcGU6ICJyb3ciIH0gfSwgWwogICAgICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIiMiIH0gfSwgW192bS5fdihfdm0uX3ModGFnLm5hbWUpKV0pCiAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIDAKICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoInRoIiwgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInRkIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICA7KF92bS5pZF9wb3N0ID0gZGF0YS5pZCksIChfdm0ubm90aWZpY2F0aW9uID0gdHJ1ZSkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX2MoImJ1dHRvbiIsIFtfdm0uX3YoInhvYSIpXSldCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygidGQiLCBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICA7KF92bS5pZF9wb3N0ID0gZGF0YS5pZCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgKF92bS50YWJsZSA9IHRydWUpLAogICAgICAgICAgICAgICAgICAgICAgICAgIChfdm0udGFibGVfZWRpdCA9IHRydWUpLAogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5lZGl0UG9zdCgpCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCJTdWEiKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICB9KSwKICAgICAgICAwCiAgICAgICkKICAgIF0pLAogICAgX2MoCiAgICAgICJkaXYiLAogICAgICB7CiAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICB2YWx1ZTogX3ZtLm5vdGlmaWNhdGlvbiwKICAgICAgICAgICAgZXhwcmVzc2lvbjogIm5vdGlmaWNhdGlvbiIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgIGF0dHJzOiB7IGlkOiAiYmFja2dyb3VuZC1vcGFjaXR5LW5vdGlmaWNhdGlvbiIgfQogICAgICB9LAogICAgICBbX3ZtLl92KCJiYWNrZ3JvdW5kLW9wYWNpdHktbm90aWZpY2F0aW9uIildCiAgICApLAogICAgX2MoCiAgICAgICJkaXYiLAogICAgICB7CiAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgewogICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICB2YWx1ZTogX3ZtLnRhYmxlX2VkaXQsCiAgICAgICAgICAgIGV4cHJlc3Npb246ICJ0YWJsZV9lZGl0IgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgYXR0cnM6IHsgaWQ6ICJ0YWJsZV9lZGl0IiB9CiAgICAgIH0sCiAgICAgIFtfdm0uX3YoInRhYmxlX2VkaXQiKV0KICAgICksCiAgICBfYygKICAgICAgImRpdiIsCiAgICAgIHsKICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgIHZhbHVlOiBfdm0ubm90aWZpY2F0aW9uLAogICAgICAgICAgICBleHByZXNzaW9uOiAibm90aWZpY2F0aW9uIgogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgYXR0cnM6IHsgaWQ6ICJub3RpZmljYXRpb24iIH0KICAgICAgfSwKICAgICAgWwogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiYmFuIG11b24geG9hIGJhaSB2aWV0IGNvIGlkIGxhIDogIiArIF92bS5fcyhfdm0uaWRfcG9zdCkgKyAiID8iCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX2MoCiAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgIHsKICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmRlbGV0ZVBvc3QoX3ZtLmlkX3Bvc3QpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgW192bS5fdigiZHVuZyIpXQogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgIHsKICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICBfdm0ubm90aWZpY2F0aW9uID0gZmFsc2UKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbX3ZtLl92KCJraG9uZyIpXQogICAgICAgICkKICAgICAgXQogICAgKSwKICAgIF9jKAogICAgICAiZGl2IiwKICAgICAgWwogICAgICAgIF92bS5fbChfdm0udG90YWxQYWdlLCBmdW5jdGlvbihwYWdlKSB7CiAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAga2V5OiBwYWdlLAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpCiAgICAgICAgICAgICAgICAgIF92bS5jdXJyZW50UGFnZSA9IHBhZ2UKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKHBhZ2UpKV0KICAgICAgICAgICkKICAgICAgICB9KSwKICAgICAgICBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5jdXJyZW50UGFnZSkgKyAiICIpCiAgICAgIF0sCiAgICAgIDIKICAgICksCiAgICBfYygKICAgICAgImRpdiIsCiAgICAgIHsKICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgIHZhbHVlOiBfdm0udGFibGUsCiAgICAgICAgICAgIGV4cHJlc3Npb246ICJ0YWJsZSIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgIGF0dHJzOiB7IGlkOiAiZm9ybSIgfQogICAgICB9LAogICAgICBbCiAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiaDEiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnRhYmxlX2VkaXQsCiAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJ0YWJsZV9lZGl0IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigiQ2hpbmggc3VhIGJhaSB2aWV0IildCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJoMSIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0udGFibGVfY3JlYXRlLAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAidGFibGVfY3JlYXRlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigiVGhlbSBiYWkgdmlldCIpXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0udXBkYXRlUG9zdCgpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCJsdXUgdGhheSBkb2kiKV0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNyZWF0ZVBvc3QoKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigidGhlbSBiYWkgdmlldCIpXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIDsoX3ZtLnRhYmxlID0gZmFsc2UpLAogICAgICAgICAgICAgICAgICAgIChfdm0udGFibGVfY3JlYXRlID0gZmFsc2UpLAogICAgICAgICAgICAgICAgICAgIChfdm0udGFibGVfZWRpdCA9IGZhbHNlKSwKICAgICAgICAgICAgICAgICAgICBfdm0uY2xlYXJGb3JtKCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoImRvbmciKV0KICAgICAgICAgICkKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgWwogICAgICAgICAgX2MoImxhYmVsIiwgeyBhdHRyczogeyBmb3I6ICJ0aXRsZSIgfSB9LCBbX3ZtLl92KCJ0aWV1IGRlIildKSwKICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgdmFsdWU6IF92bS5wb3N0LnRpdGxlLAogICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInBvc3QudGl0bGUiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLAogICAgICAgICAgICBhdHRyczogeyB0eXBlOiAidGV4dCIsIG5hbWU6ICJ0aWV1IGRlIiwgaWQ6ICJ0aXRsZSIgfSwKICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5wb3N0LnRpdGxlIH0sCiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLnBvc3QsICJ0aXRsZSIsICRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICAgIF0pLAogICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICBfYygibGFiZWwiLCB7IGF0dHJzOiB7IGZvcjogInN5bm9wc2lzIiB9IH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJ0b20gdGF0IG5vaSBkdW5nIikKICAgICAgICAgIF0pLAogICAgICAgICAgX3ZtLl92KCIgIiksCiAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnBvc3Quc3lub3BzaXMsCiAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAicG9zdC5zeW5vcHNpcyIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJ0ZXh0IiwgbmFtZTogInN5bm9wc2lzIiwgaWQ6ICJzeW5vcHNpcyIgfSwKICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5wb3N0LnN5bm9wc2lzIH0sCiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLnBvc3QsICJzeW5vcHNpcyIsICRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICAgIF0pLAogICAgICAgIF92bS5fbSgyKSwKICAgICAgICBfdm0uX20oMyksCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoImxhYmVsIiwgeyBhdHRyczogeyBmb3I6ICJjb250ZW50IiB9IH0sIFtfdm0uX3YoIm5vaSBkdW5nIildKSwKICAgICAgICAgICAgX2MoInZ1ZS1lZGl0b3IiLCB7CiAgICAgICAgICAgICAgYXR0cnM6IHsgbmFtZTogImNvbnRlbnQiIH0sCiAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0ucG9zdC5jb250ZW50LAogICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0ucG9zdCwgImNvbnRlbnQiLCAkJHYpCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInBvc3QuY29udGVudCIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICBdLAogICAgICAgICAgMQogICAgICAgICkKICAgICAgXQogICAgKQogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICAgIF9jKCJpbnB1dCIsIHsgYXR0cnM6IHsgdHlwZTogInRleHQiIH0gfSksCiAgICAgIF9jKCJidXR0b24iLCBbX3ZtLl92KCJzZWFyY2giKV0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygidGhlYWQiLCBbCiAgICAgIF9jKCJ0ciIsIFsKICAgICAgICBfYygidGgiLCB7IGF0dHJzOiB7IHNjb3BlOiAiY29sIiB9IH0sIFtfdm0uX3YoInN0dCIpXSksCiAgICAgICAgX2MoInRoIiwgeyBhdHRyczogeyBzY29wZTogImNvbCIgfSB9LCBbX3ZtLl92KCJpZCIpXSksCiAgICAgICAgX2MoInRoIiwgeyBhdHRyczogeyBzY29wZTogImNvbCIgfSB9LCBbX3ZtLl92KCJ0aXRsZSIpXSksCiAgICAgICAgX2MoInRoIiwgeyBhdHRyczogeyBzY29wZTogImNvbCIgfSB9LCBbX3ZtLl92KCJzeW5vcHNpcyIpXSksCiAgICAgICAgX2MoInRoIiwgeyBhdHRyczogeyBzY29wZTogImNvbCIgfSB9LCBbX3ZtLl92KCJjb250ZW50IildKSwKICAgICAgICBfYygidGgiLCB7IGF0dHJzOiB7IHNjb3BlOiAiY29sIiB9IH0sIFtfdm0uX3YoImNhdGVnb3J5IildKSwKICAgICAgICBfYygidGgiLCB7IGF0dHJzOiB7IHNjb3BlOiAiY29sIiB9IH0sIFtfdm0uX3YoInRhZ3MiKV0pLAogICAgICAgIF9jKCJ0aCIsIHsgYXR0cnM6IHsgc2NvcGU6ICJjb2wiIH0gfSwgW192bS5fdigidGhhbyB0YWMiKV0pCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgWwogICAgICBfYygibGFiZWwiLCB7IGF0dHJzOiB7IGZvcjogInRpdGxlIiB9IH0sIFtfdm0uX3YoInRodSBtdWMiKV0pLAogICAgICBfYygiYnIiKSwKICAgICAgX2MoImlucHV0IiwgeyBhdHRyczogeyB0eXBlOiAidGV4dCIsIG5hbWU6ICJ0aWV1IGRlIiwgaWQ6ICJ0aXRsZSIgfSB9KQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIFsKICAgICAgX2MoImxhYmVsIiwgeyBhdHRyczogeyBmb3I6ICJ0YWciIH0gfSwgW192bS5fdigidGFncyIpXSksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiYnIiKSwKICAgICAgX2MoImlucHV0IiwgeyBhdHRyczogeyB0eXBlOiAidGV4dCIsIG5hbWU6ICJ0YWciLCBpZDogInRhZyIgfSB9KQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}